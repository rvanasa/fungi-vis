Bundle { input: "open crate :: examples :: trie_nat ; ret 0", program: Der { ctx: Empty, dir: Synth, term: UseAll(UseAllModule { path: "crate::examples::trie_nat", module: Module { path: "fungi_lang::examples::trie_nat", body: "#\n[doc =\n r\" Hash trie of natural numbers, each associated with a (unique) name.\"] #\n[doc = r\"\"] #\n[doc = r\" Note: The hash structure uses the hashes of the natural number\"] #\n[doc = r\" elements, not the hashes of the names.\"] # [doc = r\"\"] type Trie =\n(rec trie . foralli (X, Y) : NmSet .\n (+ Unit + (x Nm [X] x Nat) +\n  (exists (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n   (x (Ref [Y] (trie [X1] [Y])) x (Ref [Y] (trie [X2] [Y])))))) ; type RefTrie\n= (foralli (X, Y) : NmSet . Ref [Y] (Trie [X] [Y])) ; nmtm Zero = ([]) ; idxtm\nSucc = (# x : Nm . { [] * x }) ; idxtm Gte = (# x : Nm . (Succ) ^ * { x }) ;\nidxtm Nat = ({ Gte } (nmtm [])) ; idxtm Ins = (# X : NmSet . X * Nat) ; idxtm\nWS_Trie = (# X : NmSet . { @ ! } ({ Ins } X)) ; idxtm Out_Dedup =\n(# X : NmSet . { @ @ r } * X) ; idxtm WS_Dedup =\n(# X : NmSet . ({ WS_Trie } X) % ({ @ @ dd } * X) % ({ Out_Dedup } X)) ; fn\nnat_hash_bit : (Thk [0] 0 Nat -> 0 Nat -> 0 F Bool) =\n{ unsafe (2) trapdoor :: nat_hash_bit } fn nat_print :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: nat_print } fn\nnat_print2 : (Thk [0] 0 Nat -> 0 Nat -> 0 F Unit) =\n{ unsafe (2) trapdoor :: nat_print2 } fn print_found_duplicate :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: print_found_duplicate }\n# [doc = r\" Like child fn, but returns both children, and the fact that\"] #\n[doc = r\" the names in the pair of children are apart.\"] fn children :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> { 0 ; Y } F exists\n (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n (x RefTrie [X1] [Y] x RefTrie [X2] [Y])) =\n{\n    # t . let emp : (RefTrie [0] [0]) = { ref 0 roll inj1 () } let tt =\n    { get t } unroll match tt\n    {\n        _emp => { ret pack (0, 0) (emp, emp) } leaf =>\n        { ret pack (0, 0) (emp, emp) } bin => { ret bin }\n    }\n} # [doc = r\" True if the given trie is a leaf holding the given nat\"] fn\nis_leaf_with_nat :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> 0 Nat -> { 0 ; Y } F\n Bool) =\n{\n    # t . # n . let tt = { get t } unroll match tt\n    {\n        _emp => { ret false } leaf =>\n        { let (_x, y) = { ret leaf } let b = { n == y } ret b } bin =>\n        { ret false }\n    }\n} fn trie_replrec :\n(Thk [0] foralli (X1, X2, Y) : NmSet | ((X1 % X2) = X : NmSet) . foralli Z :\n Nm . 0 RefTrie [X1] [Y] -> 0 Nm [X2] -> 0 Nat -> 0 Nat -> 0 Nm [{ Z }] ->\n { { WS_Trie } X2 ; Y } F (x RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)] x Bool))\n=\n{\n    # t . # x . # y . # i . # ni . if { i == 12 }\n    {\n        let b = { { force is_leaf_with_nat } [X1] [Y] t y } let r :\n        (RefTrie [X2] [{ WS_Trie } X2]) =\n        { ref { x, ni } roll inj2 inj1 (x, y) } ret (r, b)\n    } else\n    {\n        let j = { i + 1 } let nj = { (name []), ni } let tc =\n        { { force children } [X1] [Y] t } unpack (X1l, X1r) tc = tc let\n        (lc, rc) = { ret tc } let bit = { { force nat_hash_bit } y i } if\n        (bit)\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1l] [X2] [Y] [nmtm [] * Z] lc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l % X2, X1r) (tx, rc) } ret\n            (r, b)\n        } else\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1r] [X2] [Y] [nmtm [] * Z] rc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l, X1r % X2) (lc, tx) } ret\n            (r, b)\n        }\n    }\n} fn trie_replace :\n(Thk [0] foralli (Z1, Z2, YZ) : NmSet | ((Z1 % Z2) = Z : NmSet) . 0 RefTrie\n [Z1] [YZ] -> 0 Nm [Z2] -> 0 Nat -> { { WS_Trie } Z2 ; YZ } F\n (x RefTrie [Z1 % Z2] [YZ U ({ WS_Trie } Z2)] x Bool)) =\n{\n    # t . # x . # y . { force trie_replrec } [Z1] [Z2] [YZ] [{ [] }] t x y 0\n    (name [])\n}", decls: Doc("r\" Hash trie of natural numbers, each associated with a (unique) name.\"", Doc("r\"\"", Doc("r\" Note: The hash structure uses the hashes of the natural number\"", Doc("r\" elements, not the hashes of the names.\"", Doc("r\"\"", Type("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Ident("Nat")), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Type("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(Ident("Trie"), Var("X")), Var("Y"))))), NmTm("Zero", Name(Leaf), IdxTm("Succ", Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), IdxTm("Gte", Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), IdxTm("Nat", App(Ident("Gte"), NmTm(Name(Leaf))), IdxTm("Ins", Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), IdxTm("WS_Trie", Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))), IdxTm("Out_Dedup", Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))), IdxTm("WS_Dedup", Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))), Fn("nat_hash_bit", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_hash_bit")), Fn("nat_print", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print")), Fn("nat_print2", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print2")), Fn("print_found_duplicate", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::print_found_duplicate")), Doc("r\" Like child fn, but returns both children, and the fact that\"", Doc("r\" the names in the pair of children are apart.\"", Fn("children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))))), Doc("r\" True if the given trie is a leaf holding the given nat\"", Fn("is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))))), Fn("trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))))), Fn("trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))))), End)))))))))))))))))))))))))) } }, Ret(Nat(0))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: UseAll(UseAllModuleDer { ast: UseAllModule { path: "crate::examples::trie_nat", module: Module { path: "fungi_lang::examples::trie_nat", body: "#\n[doc =\n r\" Hash trie of natural numbers, each associated with a (unique) name.\"] #\n[doc = r\"\"] #\n[doc = r\" Note: The hash structure uses the hashes of the natural number\"] #\n[doc = r\" elements, not the hashes of the names.\"] # [doc = r\"\"] type Trie =\n(rec trie . foralli (X, Y) : NmSet .\n (+ Unit + (x Nm [X] x Nat) +\n  (exists (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n   (x (Ref [Y] (trie [X1] [Y])) x (Ref [Y] (trie [X2] [Y])))))) ; type RefTrie\n= (foralli (X, Y) : NmSet . Ref [Y] (Trie [X] [Y])) ; nmtm Zero = ([]) ; idxtm\nSucc = (# x : Nm . { [] * x }) ; idxtm Gte = (# x : Nm . (Succ) ^ * { x }) ;\nidxtm Nat = ({ Gte } (nmtm [])) ; idxtm Ins = (# X : NmSet . X * Nat) ; idxtm\nWS_Trie = (# X : NmSet . { @ ! } ({ Ins } X)) ; idxtm Out_Dedup =\n(# X : NmSet . { @ @ r } * X) ; idxtm WS_Dedup =\n(# X : NmSet . ({ WS_Trie } X) % ({ @ @ dd } * X) % ({ Out_Dedup } X)) ; fn\nnat_hash_bit : (Thk [0] 0 Nat -> 0 Nat -> 0 F Bool) =\n{ unsafe (2) trapdoor :: nat_hash_bit } fn nat_print :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: nat_print } fn\nnat_print2 : (Thk [0] 0 Nat -> 0 Nat -> 0 F Unit) =\n{ unsafe (2) trapdoor :: nat_print2 } fn print_found_duplicate :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: print_found_duplicate }\n# [doc = r\" Like child fn, but returns both children, and the fact that\"] #\n[doc = r\" the names in the pair of children are apart.\"] fn children :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> { 0 ; Y } F exists\n (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n (x RefTrie [X1] [Y] x RefTrie [X2] [Y])) =\n{\n    # t . let emp : (RefTrie [0] [0]) = { ref 0 roll inj1 () } let tt =\n    { get t } unroll match tt\n    {\n        _emp => { ret pack (0, 0) (emp, emp) } leaf =>\n        { ret pack (0, 0) (emp, emp) } bin => { ret bin }\n    }\n} # [doc = r\" True if the given trie is a leaf holding the given nat\"] fn\nis_leaf_with_nat :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> 0 Nat -> { 0 ; Y } F\n Bool) =\n{\n    # t . # n . let tt = { get t } unroll match tt\n    {\n        _emp => { ret false } leaf =>\n        { let (_x, y) = { ret leaf } let b = { n == y } ret b } bin =>\n        { ret false }\n    }\n} fn trie_replrec :\n(Thk [0] foralli (X1, X2, Y) : NmSet | ((X1 % X2) = X : NmSet) . foralli Z :\n Nm . 0 RefTrie [X1] [Y] -> 0 Nm [X2] -> 0 Nat -> 0 Nat -> 0 Nm [{ Z }] ->\n { { WS_Trie } X2 ; Y } F (x RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)] x Bool))\n=\n{\n    # t . # x . # y . # i . # ni . if { i == 12 }\n    {\n        let b = { { force is_leaf_with_nat } [X1] [Y] t y } let r :\n        (RefTrie [X2] [{ WS_Trie } X2]) =\n        { ref { x, ni } roll inj2 inj1 (x, y) } ret (r, b)\n    } else\n    {\n        let j = { i + 1 } let nj = { (name []), ni } let tc =\n        { { force children } [X1] [Y] t } unpack (X1l, X1r) tc = tc let\n        (lc, rc) = { ret tc } let bit = { { force nat_hash_bit } y i } if\n        (bit)\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1l] [X2] [Y] [nmtm [] * Z] lc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l % X2, X1r) (tx, rc) } ret\n            (r, b)\n        } else\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1r] [X2] [Y] [nmtm [] * Z] rc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l, X1r % X2) (lc, tx) } ret\n            (r, b)\n        }\n    }\n} fn trie_replace :\n(Thk [0] foralli (Z1, Z2, YZ) : NmSet | ((Z1 % Z2) = Z : NmSet) . 0 RefTrie\n [Z1] [YZ] -> 0 Nm [Z2] -> 0 Nat -> { { WS_Trie } Z2 ; YZ } F\n (x RefTrie [Z1 % Z2] [YZ U ({ WS_Trie } Z2)] x Bool)) =\n{\n    # t . # x . # y . { force trie_replrec } [Z1] [Z2] [YZ] [{ [] }] t x y 0\n    (name [])\n}", decls: Doc("r\" Hash trie of natural numbers, each associated with a (unique) name.\"", Doc("r\"\"", Doc("r\" Note: The hash structure uses the hashes of the natural number\"", Doc("r\" elements, not the hashes of the names.\"", Doc("r\"\"", Type("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Ident("Nat")), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Type("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(Ident("Trie"), Var("X")), Var("Y"))))), NmTm("Zero", Name(Leaf), IdxTm("Succ", Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), IdxTm("Gte", Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), IdxTm("Nat", App(Ident("Gte"), NmTm(Name(Leaf))), IdxTm("Ins", Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), IdxTm("WS_Trie", Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))), IdxTm("Out_Dedup", Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))), IdxTm("WS_Dedup", Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))), Fn("nat_hash_bit", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_hash_bit")), Fn("nat_print", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print")), Fn("nat_print2", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print2")), Fn("print_found_duplicate", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::print_found_duplicate")), Doc("r\" Like child fn, but returns both children, and the fact that\"", Doc("r\" the names in the pair of children are apart.\"", Fn("children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))))), Doc("r\" True if the given trie is a leaf holding the given nat\"", Fn("is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))))), Fn("trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))))), Fn("trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))))), End)))))))))))))))))))))))))) } }, der: ModuleDer { ast: Module { path: "fungi_lang::examples::trie_nat", body: "#\n[doc =\n r\" Hash trie of natural numbers, each associated with a (unique) name.\"] #\n[doc = r\"\"] #\n[doc = r\" Note: The hash structure uses the hashes of the natural number\"] #\n[doc = r\" elements, not the hashes of the names.\"] # [doc = r\"\"] type Trie =\n(rec trie . foralli (X, Y) : NmSet .\n (+ Unit + (x Nm [X] x Nat) +\n  (exists (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n   (x (Ref [Y] (trie [X1] [Y])) x (Ref [Y] (trie [X2] [Y])))))) ; type RefTrie\n= (foralli (X, Y) : NmSet . Ref [Y] (Trie [X] [Y])) ; nmtm Zero = ([]) ; idxtm\nSucc = (# x : Nm . { [] * x }) ; idxtm Gte = (# x : Nm . (Succ) ^ * { x }) ;\nidxtm Nat = ({ Gte } (nmtm [])) ; idxtm Ins = (# X : NmSet . X * Nat) ; idxtm\nWS_Trie = (# X : NmSet . { @ ! } ({ Ins } X)) ; idxtm Out_Dedup =\n(# X : NmSet . { @ @ r } * X) ; idxtm WS_Dedup =\n(# X : NmSet . ({ WS_Trie } X) % ({ @ @ dd } * X) % ({ Out_Dedup } X)) ; fn\nnat_hash_bit : (Thk [0] 0 Nat -> 0 Nat -> 0 F Bool) =\n{ unsafe (2) trapdoor :: nat_hash_bit } fn nat_print :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: nat_print } fn\nnat_print2 : (Thk [0] 0 Nat -> 0 Nat -> 0 F Unit) =\n{ unsafe (2) trapdoor :: nat_print2 } fn print_found_duplicate :\n(Thk [0] 0 Nat -> 0 F Unit) = { unsafe (1) trapdoor :: print_found_duplicate }\n# [doc = r\" Like child fn, but returns both children, and the fact that\"] #\n[doc = r\" the names in the pair of children are apart.\"] fn children :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> { 0 ; Y } F exists\n (X1, X2) : NmSet | ((X1 % X2) = X : NmSet) .\n (x RefTrie [X1] [Y] x RefTrie [X2] [Y])) =\n{\n    # t . let emp : (RefTrie [0] [0]) = { ref 0 roll inj1 () } let tt =\n    { get t } unroll match tt\n    {\n        _emp => { ret pack (0, 0) (emp, emp) } leaf =>\n        { ret pack (0, 0) (emp, emp) } bin => { ret bin }\n    }\n} # [doc = r\" True if the given trie is a leaf holding the given nat\"] fn\nis_leaf_with_nat :\n(Thk [0] foralli (X, Y) : NmSet . 0 RefTrie [X] [Y] -> 0 Nat -> { 0 ; Y } F\n Bool) =\n{\n    # t . # n . let tt = { get t } unroll match tt\n    {\n        _emp => { ret false } leaf =>\n        { let (_x, y) = { ret leaf } let b = { n == y } ret b } bin =>\n        { ret false }\n    }\n} fn trie_replrec :\n(Thk [0] foralli (X1, X2, Y) : NmSet | ((X1 % X2) = X : NmSet) . foralli Z :\n Nm . 0 RefTrie [X1] [Y] -> 0 Nm [X2] -> 0 Nat -> 0 Nat -> 0 Nm [{ Z }] ->\n { { WS_Trie } X2 ; Y } F (x RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)] x Bool))\n=\n{\n    # t . # x . # y . # i . # ni . if { i == 12 }\n    {\n        let b = { { force is_leaf_with_nat } [X1] [Y] t y } let r :\n        (RefTrie [X2] [{ WS_Trie } X2]) =\n        { ref { x, ni } roll inj2 inj1 (x, y) } ret (r, b)\n    } else\n    {\n        let j = { i + 1 } let nj = { (name []), ni } let tc =\n        { { force children } [X1] [Y] t } unpack (X1l, X1r) tc = tc let\n        (lc, rc) = { ret tc } let bit = { { force nat_hash_bit } y i } if\n        (bit)\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1l] [X2] [Y] [nmtm [] * Z] lc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l % X2, X1r) (tx, rc) } ret\n            (r, b)\n        } else\n        {\n            let (tx, b) =\n            {\n                { force trie_replrec } [X1r] [X2] [Y] [nmtm [] * Z] rc x y j\n                nj\n            } let r : (RefTrie [X1 % X2] [Y U ({ WS_Trie } X2)]) =\n            { ref { x, ni } roll inj2 inj2 pack (X1l, X1r % X2) (lc, tx) } ret\n            (r, b)\n        }\n    }\n} fn trie_replace :\n(Thk [0] foralli (Z1, Z2, YZ) : NmSet | ((Z1 % Z2) = Z : NmSet) . 0 RefTrie\n [Z1] [YZ] -> 0 Nm [Z2] -> 0 Nat -> { { WS_Trie } Z2 ; YZ } F\n (x RefTrie [Z1 % Z2] [YZ U ({ WS_Trie } Z2)] x Bool)) =\n{\n    # t . # x . # y . { force trie_replrec } [Z1] [Z2] [YZ] [{ [] }] t x y 0\n    (name [])\n}", decls: Doc("r\" Hash trie of natural numbers, each associated with a (unique) name.\"", Doc("r\"\"", Doc("r\" Note: The hash structure uses the hashes of the natural number\"", Doc("r\" elements, not the hashes of the names.\"", Doc("r\"\"", Type("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Ident("Nat")), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Type("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(Ident("Trie"), Var("X")), Var("Y"))))), NmTm("Zero", Name(Leaf), IdxTm("Succ", Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), IdxTm("Gte", Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), IdxTm("Nat", App(Ident("Gte"), NmTm(Name(Leaf))), IdxTm("Ins", Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), IdxTm("WS_Trie", Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))), IdxTm("Out_Dedup", Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))), IdxTm("WS_Dedup", Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))), Fn("nat_hash_bit", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_hash_bit")), Fn("nat_print", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print")), Fn("nat_print2", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::nat_print2")), Fn("print_found_duplicate", Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), HostFn(HostEvalFn("trapdoor::print_found_duplicate")), Doc("r\" Like child fn, but returns both children, and the fact that\"", Doc("r\" the names in the pair of children are apart.\"", Fn("children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))))), Doc("r\" True if the given trie is a leaf holding the given nat\"", Fn("is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))))), Fn("trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))))), Fn("trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))))), End)))))))))))))))))))))))))) }, tds: [Bind(ItemDer { doc: Some("r\"\""), qual: Type, var: "Trie", der: Der { ctx: Empty, dir: Synth, term: (), clas: Ok(Kind(NoParse("TODO-XXX-bitype.rs"))), rule: Type("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Type, var: "RefTrie", der: Der { ctx: Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), dir: Synth, term: (), clas: Ok(Kind(NoParse("TODO-XXX-bitype.rs"))), rule: Type("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: NmTm, var: "Zero", der: Der { ctx: Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), dir: Synth, term: (), clas: Ok(Sort(Nm)), rule: NmTm("Zero", Der { ctx: Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "Succ", der: Der { ctx: Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(Nm, NmSet))), rule: IdxTm("Succ", Der { ctx: Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "Gte", der: Der { ctx: Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(Nm, NmSet))), rule: IdxTm("Gte", Der { ctx: Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), dir: Synth, term: Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), dir: Synth, term: FlatMapStar(Ident("Succ"), Sing(Var("x"))), clas: Ok(NmSet), rule: FlatMapStar(Der { ctx: IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), dir: Synth, term: Sing(Var("x")), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "Nat", der: Der { ctx: Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), dir: Synth, term: (), clas: Ok(Sort(NmSet)), rule: IdxTm("Nat", Der { ctx: Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), dir: Synth, term: App(Ident("Gte"), NmTm(Name(Leaf))), clas: Ok(NmSet), rule: App(Der { ctx: Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), dir: Synth, term: Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), dir: Synth, term: FlatMapStar(Ident("Succ"), Sing(Var("x"))), clas: Ok(NmSet), rule: FlatMapStar(Der { ctx: IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), dir: Synth, term: Sing(Var("x")), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), dir: Synth, term: NmTm(Name(Leaf)), clas: Ok(Nm), rule: NmTm(Der { ctx: Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "Ins", der: Der { ctx: Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(NmSet, NmSet))), rule: IdxTm("Ins", Der { ctx: Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), dir: Synth, term: Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: Bin(Var("X"), Ident("Nat")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: App(Ident("Gte"), NmTm(Name(Leaf))), clas: Ok(NmSet), rule: App(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), dir: Synth, term: FlatMapStar(Ident("Succ"), Sing(Var("x"))), clas: Ok(NmSet), rule: FlatMapStar(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), dir: Synth, term: Sing(Var("x")), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: NmTm(Name(Leaf)), clas: Ok(Nm), rule: NmTm(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "X", NmSet), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "WS_Trie", der: Der { ctx: Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(NmSet, NmSet))), rule: IdxTm("WS_Trie", Der { ctx: Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), dir: Synth, term: Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), dir: Synth, term: App(WriteScope, App(Ident("Ins"), Var("X"))), clas: Ok(NmSet), rule: App(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), dir: Synth, term: WriteScope, clas: Ok(IdxArrow(NmSet, NmSet)), rule: WriteScope, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), dir: Synth, term: App(Ident("Ins"), Var("X")), clas: Ok(NmSet), rule: App(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), dir: Synth, term: Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Bin(Var("X"), Ident("Nat")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: App(Ident("Gte"), NmTm(Name(Leaf))), clas: Ok(NmSet), rule: App(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: FlatMapStar(Ident("Succ"), Sing(Var("x"))), clas: Ok(NmSet), rule: FlatMapStar(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Sing(Var("x")), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: NmTm(Name(Leaf)), clas: Ok(Nm), rule: NmTm(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "Out_Dedup", der: Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(NmSet, NmSet))), rule: IdxTm("Out_Dedup", Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), dir: Synth, term: Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "X", NmSet), dir: Synth, term: Bin(Sing(Name(Sym("r"))), Var("X")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "X", NmSet), dir: Synth, term: Sing(Name(Sym("r"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "X", NmSet), dir: Synth, term: Name(Sym("r")), clas: Ok(Nm), rule: Name(Sym("r")), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: IdxTm, var: "WS_Dedup", der: Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), dir: Synth, term: (), clas: Ok(Sort(IdxArrow(NmSet, NmSet))), rule: IdxTm("WS_Dedup", Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), dir: Synth, term: Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X"))), clas: Ok(NmSet), rule: Apart(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), clas: Ok(NmSet), rule: Apart(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: App(Ident("WS_Trie"), Var("X")), clas: Ok(NmSet), rule: App(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: App(WriteScope, App(Ident("Ins"), Var("X"))), clas: Ok(NmSet), rule: App(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: WriteScope, clas: Ok(IdxArrow(NmSet, NmSet)), rule: WriteScope, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: App(Ident("Ins"), Var("X")), clas: Ok(NmSet), rule: App(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: Bin(Var("X"), Ident("Nat")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: App(Ident("Gte"), NmTm(Name(Leaf))), clas: Ok(NmSet), rule: App(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: FlatMapStar(Ident("Succ"), Sing(Var("x"))), clas: Ok(NmSet), rule: FlatMapStar(Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), clas: Ok(IdxArrow(Nm, NmSet)), rule: Lam("x", Nm, Der { ctx: IVar(IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Sing(Bin(Name(Leaf), Var("x"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Bin(Name(Leaf), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Sing(Var("x")), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: NmTm(Name(Leaf)), clas: Ok(Nm), rule: NmTm(Der { ctx: IVar(IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), "X", NmSet), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Bin(Sing(Name(Sym("dd"))), Var("X")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Sing(Name(Sym("dd"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Name(Sym("dd")), clas: Ok(Nm), rule: Name(Sym("dd")), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: App(Ident("Out_Dedup"), Var("X")), clas: Ok(NmSet), rule: App(Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))), clas: Ok(IdxArrow(NmSet, NmSet)), rule: Lam("X", NmSet, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Bin(Sing(Name(Sym("r"))), Var("X")), clas: Ok(NmSet), rule: Bin(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Sing(Name(Sym("r"))), clas: Ok(NmSet), rule: Sing(Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Name(Sym("r")), clas: Ok(Nm), rule: Name(Sym("r")), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: IVar(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "X", NmSet), dir: Synth, term: Var("X"), clas: Ok(NmSet), rule: Var("X"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "nat_hash_bit", der: Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Fn("nat_hash_bit", Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), dir: Check(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), term: ThunkAnon(HostFn(HostEvalFn("trapdoor::nat_hash_bit"))), clas: Ok(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: ThunkAnon(Der { ctx: Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), term: HostFn(HostEvalFn("trapdoor::nat_hash_bit")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: HostFn(HostEvalFn("trapdoor::nat_hash_bit")), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "nat_print", der: Der { ctx: Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Fn("nat_print", Der { ctx: Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), term: ThunkAnon(HostFn(HostEvalFn("trapdoor::nat_print"))), clas: Ok(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), rule: ThunkAnon(Der { ctx: Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), term: HostFn(HostEvalFn("trapdoor::nat_print")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), rule: HostFn(HostEvalFn("trapdoor::nat_print")), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "nat_print2", der: Der { ctx: Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Fn("nat_print2", Der { ctx: Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), term: ThunkAnon(HostFn(HostEvalFn("trapdoor::nat_print2"))), clas: Ok(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: ThunkAnon(Der { ctx: Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), term: HostFn(HostEvalFn("trapdoor::nat_print2")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: HostFn(HostEvalFn("trapdoor::nat_print2")), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "print_found_duplicate", der: Der { ctx: Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Fn("print_found_duplicate", Der { ctx: Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), term: ThunkAnon(HostFn(HostEvalFn("trapdoor::print_found_duplicate"))), clas: Ok(Thk(Empty, Cons(Arrow(Ident("Nat"), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), rule: ThunkAnon(Der { ctx: Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), term: HostFn(HostEvalFn("trapdoor::print_found_duplicate")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), rule: HostFn(HostEvalFn("trapdoor::print_found_duplicate")), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: Some("r\" the names in the pair of children are apart.\""), qual: Val, var: "children", der: Der { ctx: Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))))), rule: Fn("children", Der { ctx: Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), term: ThunkAnon(Fix("children", Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))))))), clas: Ok(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), rule: ThunkAnon(Der { ctx: Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), dir: Check(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), term: Fix("children", Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin"))))))))), clas: Ok(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), rule: Fix("children", Der { ctx: Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), dir: Check(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), term: Lam("t", Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))), rule: Lam("t", Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Let("emp", AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin"))))))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Let("emp", Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Synth, term: AnnoC(RefAnon(Roll(Inj1(Unit))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Empty), Empty))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), WR(Empty, Empty))), rule: AnnoC(Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), WR(Empty, Empty))), term: RefAnon(Roll(Inj1(Unit))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), WR(Empty, Empty))), rule: RefAnon(Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), NmSet(NmSet { cons: None, terms: [] })), NmSet(NmSet { cons: None, terms: [] }))), term: Roll(Inj1(Unit)), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: None, terms: [] })), NmSet(NmSet { cons: None, terms: [] }))), rule: Roll(Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: None, terms: [] })), NmSet(NmSet { cons: None, terms: [] }))), term: Inj1(Unit), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: None, terms: [] })), NmSet(NmSet { cons: None, terms: [] }))), rule: Inj1(Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(Unit), term: Unit, clas: Ok(Unit), rule: Unit, vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty))), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Let("tt", Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), dir: Synth, term: Get(Var("t")), clas: Ok(Cons(Lift(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), WR(Empty, Var("Y")))), rule: Get(Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), dir: Synth, term: Var("t"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), rule: Var("t"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin"))))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Unroll(Der { ctx: Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), dir: Synth, term: Var("tt"), clas: Ok(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), rule: Var("tt"), vis: DerVis { tmfam: "Val", local_err: false } }, "sugar_match_unroll", Der { ctx: Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Case(Var("sugar_match_unroll"), "_emp", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin")))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Case(Der { ctx: Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), dir: Synth, term: Var("sugar_match_unroll"), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), rule: Var("sugar_match_unroll"), vis: DerVis { tmfam: "Val", local_err: false } }, "_emp", Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), term: Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp")))), clas: Ok(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Synth, term: Empty, clas: Ok(NmSet), rule: Empty, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Exists("X2", NmSet, Equiv(Apart(Empty, Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), term: Pack(Empty, Pair(Var("emp"), Var("emp"))), clas: Ok(Exists("X2", NmSet, Equiv(Apart(Empty, Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Synth, term: Empty, clas: Ok(NmSet), rule: Empty, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")))), term: Pair(Var("emp"), Var("emp")), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y"))), term: Var("emp"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), rule: Var("emp"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y"))), term: Var("emp"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), rule: Var("emp"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, "sugar_match_snd", Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Case(Var("sugar_match_snd"), "leaf", Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), "bin", Ret(Var("bin"))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Case(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), dir: Synth, term: Var("sugar_match_snd"), clas: Ok(Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), rule: Var("sugar_match_snd"), vis: DerVis { tmfam: "Val", local_err: false } }, "leaf", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Ret(Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp"))))), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), term: Pack(Empty, Pack(Empty, Pair(Var("emp"), Var("emp")))), clas: Ok(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Synth, term: Empty, clas: Ok(NmSet), rule: Empty, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Exists("X2", NmSet, Equiv(Apart(Empty, Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), term: Pack(Empty, Pair(Var("emp"), Var("emp"))), clas: Ok(Exists("X2", NmSet, Equiv(Apart(Empty, Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Synth, term: Empty, clas: Ok(NmSet), rule: Empty, vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")))), term: Pair(Var("emp"), Var("emp")), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y")))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y"))), term: Var("emp"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), rule: Var("emp"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Var("Y"))), term: Var("emp"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), rule: Var("emp"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, "bin", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "bin", Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y"))))))), dir: Check(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), term: Ret(Var("bin")), clas: Ok(Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "emp", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Empty), Empty)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "bin", Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y"))))))), dir: Check(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), term: Var("bin"), clas: Ok(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y"))))))), rule: Var("bin"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: Some("r\" True if the given trie is a leaf holding the given nat\""), qual: Val, var: "is_leaf_with_nat", der: Der { ctx: Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: Fn("is_leaf_with_nat", Der { ctx: Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), dir: Check(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), term: ThunkAnon(Fix("is_leaf_with_nat", Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))))))), clas: Ok(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X")), Var("Y")), Cons(Arrow(Ident("Nat"), Cons(Lift(Ident("Bool")), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: ThunkAnon(Der { ctx: Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), dir: Check(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), term: Fix("is_leaf_with_nat", Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false))))))))), clas: Ok(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Fix("is_leaf_with_nat", Der { ctx: Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), dir: Check(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), term: Lam("t", Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("t", Der { ctx: Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), term: Lam("n", Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false))))))), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), rule: Lam("n", Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Let("tt", Get(Var("t")), Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Let("tt", Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), dir: Synth, term: Get(Var("t")), clas: Ok(Cons(Lift(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), WR(Empty, Var("Y")))), rule: Get(Der { ctx: Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), dir: Synth, term: Var("t"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), rule: Var("t"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Unroll(Var("tt"), "sugar_match_unroll", Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false))))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Unroll(Der { ctx: Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), dir: Synth, term: Var("tt"), clas: Ok(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), rule: Var("tt"), vis: DerVis { tmfam: "Val", local_err: false } }, "sugar_match_unroll", Der { ctx: Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Case(Var("sugar_match_unroll"), "_emp", Ret(Bool(false)), "sugar_match_snd", Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false)))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Case(Der { ctx: Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), dir: Synth, term: Var("sugar_match_unroll"), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), rule: Var("sugar_match_unroll"), vis: DerVis { tmfam: "Val", local_err: false } }, "_emp", Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Ret(Bool(false)), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "_emp", Unit), dir: Check(Prim(Bool)), term: Bool(false), clas: Ok(Prim(Bool)), rule: Bool(false), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, "sugar_match_snd", Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Case(Var("sugar_match_snd"), "leaf", Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), "bin", Ret(Bool(false))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Case(Der { ctx: Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), dir: Synth, term: Var("sugar_match_snd"), clas: Ok(Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), rule: Var("sugar_match_snd"), vis: DerVis { tmfam: "Val", local_err: false } }, "leaf", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Let("let_split_sugar", Ret(Var("leaf")), Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Let("let_split_sugar", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Synth, term: Ret(Var("leaf")), clas: Ok(Cons(Lift(Prod(Nm(Var("X")), Prim(Nat))), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), dir: Synth, term: Var("leaf"), clas: Ok(Prod(Nm(Var("X")), Prim(Nat))), rule: Var("leaf"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Split(Var("let_split_sugar"), "_x", "y", Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b")))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Split(Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(Nm(Var("X")), Prim(Nat))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "_x", "y", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Let("b", PrimApp(NatEq(Var("n"), Var("y"))), Ret(Var("b"))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Let("b", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), dir: Synth, term: PrimApp(NatEq(Var("n"), Var("y"))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Empty))), rule: PrimApp(NatEq(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), dir: Synth, term: Var("n"), clas: Ok(Prim(Nat)), rule: Var("n"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), dir: Synth, term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), "b", Prim(Bool)), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Ret(Var("b")), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "leaf", Prod(Nm(Var("X")), Prim(Nat))), "let_split_sugar", Prod(Nm(Var("X")), Prim(Nat))), "_x", Nm(Var("X"))), "y", Prim(Nat)), "b", Prim(Bool)), dir: Check(Prim(Bool)), term: Var("b"), clas: Ok(Prim(Bool)), rule: Var("b"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, "bin", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "bin", Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y"))))))), dir: Check(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), term: Ret(Bool(false)), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(IVar(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "X", NmSet), "Y", NmSet), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y"))), "n", Prim(Nat)), "tt", IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X")), Var("Y"))), "sugar_match_unroll", IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X")), Var("Y"))), "sugar_match_snd", Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))), "bin", Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y"))))))), dir: Check(Prim(Bool)), term: Bool(false), clas: Ok(Prim(Bool)), rule: Bool(false), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "trie_replrec", der: Der { ctx: Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))))), rule: Fn("trie_replrec", Der { ctx: Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), dir: Check(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), term: ThunkAnon(Fix("trie_replrec", Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))))))), clas: Ok(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Ident("Nat"), Cons(Arrow(Ident("Nat"), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), rule: ThunkAnon(Der { ctx: Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), dir: Check(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), term: Fix("trie_replrec", Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))))))))))))), clas: Ok(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: Fix("trie_replrec", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), dir: Check(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), term: Lam("t", Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("t", Der { ctx: Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), dir: Check(Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), term: Lam("x", Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))))))))))), clas: Ok(Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("x", Der { ctx: Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), term: Lam("y", Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))))), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("y", Der { ctx: Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), dir: Check(Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), term: Lam("i", Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))))))))), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("i", Der { ctx: Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), dir: Check(Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), term: Lam("ni", Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))))), clas: Ok(Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), rule: Lam("ni", Der { ctx: Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("sugar_if_scrutinee", PrimApp(NatEq(Var("i"), Nat(12))), IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("sugar_if_scrutinee", Der { ctx: Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), dir: Synth, term: PrimApp(NatEq(Var("i"), Nat(12))), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Empty))), rule: PrimApp(NatEq(Der { ctx: Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), dir: Synth, term: Var("i"), clas: Ok(Prim(Nat)), rule: Var("i"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), dir: Synth, term: Nat(12), clas: Ok(Prim(Nat)), rule: Nat(12), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: IfThenElse(Var("sugar_if_scrutinee"), Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: IfThenElse(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Var("sugar_if_scrutinee"), clas: Ok(Prim(Bool)), rule: Var("sugar_if_scrutinee"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("b", App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b"))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("b", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: App(App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), Var("y")), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), rule: App(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: App(IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), Var("t")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), Var("Y")), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: IdxApp(Force(Var("is_leaf_with_nat")), Var("X1")), clas: Ok(ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Force(Var("is_leaf_with_nat")), clas: Ok(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: Force(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Var("is_leaf_with_nat"), clas: Ok(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: Var("is_leaf_with_nat"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Var("X1"), clas: Ok(NmSet), rule: Var("X1"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Var("Y"), clas: Ok(NmSet), rule: Var("Y"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), term: Var("t"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), rule: Var("t"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), Ret(Pair(Var("r"), Var("b")))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("r", Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Synth, term: AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Var("X2")), App(Ident("WS_Trie"), Var("X2"))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), WR(Empty, Empty))), rule: AnnoC(Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), WR(Empty, Empty))), term: Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), WR(Empty, Empty))), rule: Let("ref_name_sugar", Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Synth, term: PrimApp(NameBin(Var("x"), Var("ni"))), clas: Ok(Cons(Lift(Nm(Bin(Var("X2"), Sing(Var("Z"))))), WR(Empty, Empty))), rule: PrimApp(NameBin(Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Synth, term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), dir: Synth, term: Var("ni"), clas: Ok(Nm(Sing(Var("Z")))), rule: Var("ni"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), WR(Empty, Empty))), term: Ref(Var("ref_name_sugar"), Roll(Inj2(Inj1(Pair(Var("x"), Var("y")))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), WR(Empty, Empty))), rule: Ref(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("ref_name_sugar"), clas: Ok(Nm(Bin(Var("X2"), Sing(Var("Z"))))), rule: Var("ref_name_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), term: Roll(Inj2(Inj1(Pair(Var("x"), Var("y"))))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X2")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), rule: Roll(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X2")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), term: Inj2(Inj1(Pair(Var("x"), Var("y")))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), Var("X2")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), rule: Inj2(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Sum(Prod(Nm(Var("X2")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X2"), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] })))))))), term: Inj1(Pair(Var("x"), Var("y"))), clas: Ok(Sum(Prod(Nm(Var("X2")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X2"), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x"))))))] })))))))), rule: Inj1(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Prod(Nm(Var("X2")), Prim(Nat))), term: Pair(Var("x"), Var("y")), clas: Ok(Prod(Nm(Var("X2")), Prim(Nat))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Nm(Var("X2"))), term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Ret(Pair(Var("r"), Var("b"))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), dir: Check(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), term: Pair(Var("r"), Var("b")), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), term: Var("r"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), rule: Var("r"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), dir: Check(Prim(Bool)), term: Var("b"), clas: Ok(Prim(Bool)), rule: Var("b"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("j", PrimApp(NatPlus(Var("i"), Nat(1))), Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("j", Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: PrimApp(NatPlus(Var("i"), Nat(1))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: PrimApp(NatPlus(Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Var("i"), clas: Ok(Prim(Nat)), rule: Var("i"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), dir: Synth, term: Nat(1), clas: Ok(Prim(Nat)), rule: Nat(1), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("nj", PrimApp(NameBin(Name(Leaf), Var("ni"))), Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("nj", Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), dir: Synth, term: PrimApp(NameBin(Name(Leaf), Var("ni"))), clas: Ok(Cons(Lift(Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), WR(Empty, Empty))), rule: PrimApp(NameBin(Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), dir: Synth, term: Name(Leaf), clas: Ok(Nm(Sing(Name(Leaf)))), rule: Name(Leaf), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), dir: Synth, term: Var("ni"), clas: Ok(Nm(Sing(Var("Z")))), rule: Var("ni"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("tc", App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("tc", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: App(IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), Var("t")), clas: Ok(Cons(Lift(Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), rule: App(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: IdxApp(IdxApp(Force(Var("children")), Var("X1")), Var("Y")), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Lift(Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: IdxApp(Force(Var("children")), Var("X1")), clas: Ok(ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Lift(Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: Force(Var("children")), clas: Ok(ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty))))), rule: Force(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: Var("children"), clas: Ok(Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), rule: Var("children"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: Var("X1"), clas: Ok(NmSet), rule: Var("X1"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Synth, term: Var("Y"), clas: Ok(NmSet), rule: Var("Y"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), term: Var("t"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), rule: Var("t"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Unpack("X1l", "sugar_unpack_multi", Var("tc"), Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Unpack("X1l", "sugar_unpack_multi", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), dir: Synth, term: Var("tc"), clas: Ok(Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), rule: Var("tc"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Unpack("X1r", "tc", Var("sugar_unpack_multi"), Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Unpack("X1r", "tc", Der { ctx: Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), dir: Synth, term: Var("sugar_unpack_multi"), clas: Ok(Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), rule: Var("sugar_unpack_multi"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("let_split_sugar", Ret(Var("tc")), Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("let_split_sugar", Der { ctx: Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), dir: Synth, term: Ret(Var("tc")), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), dir: Synth, term: Var("tc"), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), rule: Var("tc"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Split(Var("let_split_sugar"), "lc", "rc", Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Split(Der { ctx: Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "lc", "rc", Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("bit", App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("bit", Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Synth, term: App(App(Force(Var("nat_hash_bit")), Var("y")), Var("i")), clas: Ok(Cons(Lift(Prim(Bool)), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Synth, term: App(Force(Var("nat_hash_bit")), Var("y")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Synth, term: Force(Var("nat_hash_bit")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Force(Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Synth, term: Var("nat_hash_bit"), clas: Ok(Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: Var("nat_hash_bit"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), dir: Check(Prim(Nat)), term: Var("i"), clas: Ok(Prim(Nat)), rule: Var("i"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: IfThenElse(Var("bit"), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: IfThenElse(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("bit"), clas: Ok(Prim(Bool)), rule: Var("bit"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("let_split_sugar", Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), Var("nj")), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), Var("j")), clas: Ok(Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), Var("y")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), Var("x")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("lc")), clas: Ok(Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), Var("Y")), clas: Ok(ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1l")), Var("X2")), clas: Ok(ForallIdx("Y", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(Force(Var("trie_replrec")), Var("X1l")), clas: Ok(ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Force(Var("trie_replrec")), clas: Ok(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: Force(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("trie_replrec"), clas: Ok(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), rule: Var("trie_replrec"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("X1l"), clas: Ok(NmSet), rule: Var("X1l"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("X2"), clas: Ok(NmSet), rule: Var("X2"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("Y"), clas: Ok(NmSet), rule: Var("Y"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: NmTm(Bin(Name(Leaf), Var("Z"))), clas: Ok(Nm), rule: NmTm(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Bin(Name(Leaf), Var("Z")), clas: Ok(Nm), rule: Bin(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("Z"), clas: Ok(Nm), rule: Var("Z"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), term: Var("lc"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), rule: Var("lc"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Nm(Var("X2"))), term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Prim(Nat)), term: Var("j"), clas: Ok(Prim(Nat)), rule: Var("j"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Nm(Sing(Bin(Name(Leaf), Var("Z"))))), term: Var("nj"), clas: Ok(Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), rule: Var("nj"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Split(Der { ctx: Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "tx", "b", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Let("r", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: AnnoC(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), term: Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: Let("ref_name_sugar", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: PrimApp(NameBin(Var("x"), Var("ni"))), clas: Ok(Cons(Lift(Nm(Bin(Var("X2"), Sing(Var("Z"))))), WR(Empty, Empty))), rule: PrimApp(NameBin(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: Var("ni"), clas: Ok(Nm(Sing(Var("Z")))), rule: Var("ni"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), term: Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc")))))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: Ref(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("ref_name_sugar"), clas: Ok(Nm(Bin(Var("X2"), Sing(Var("Z"))))), rule: Var("ref_name_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), term: Roll(Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), rule: Roll(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), term: Inj2(Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc")))))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), rule: Inj2(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Sum(Prod(Nm(NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), Prim(Nat)), Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))))), term: Inj2(Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))))), clas: Ok(Sum(Prod(Nm(NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), Prim(Nat)), Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))))), rule: Inj2(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))))), term: Pack(Apart(Var("X1l"), Var("X2")), Pack(Var("X1r"), Pair(Var("tx"), Var("rc")))), clas: Ok(Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Apart(Var("X1l"), Var("X2")), clas: Ok(NmSet), rule: Apart(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X1l"), clas: Ok(NmSet), rule: Var("X1l"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X2"), clas: Ok(NmSet), rule: Var("X2"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Exists("X2~", NmSet, Equiv(Apart(Apart(Var("X1l"), Var("X2")), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Apart(Var("X1l"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))), term: Pack(Var("X1r"), Pair(Var("tx"), Var("rc"))), clas: Ok(Exists("X2~", NmSet, Equiv(Apart(Apart(Var("X1l"), Var("X2")), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Apart(Var("X1l"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X1r"), clas: Ok(NmSet), rule: Var("X1r"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Apart(Var("X1l"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Var("X1r")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))), term: Pair(Var("tx"), Var("rc")), clas: Ok(Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Apart(Var("X1l"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Var("X1r")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Apart(Var("X1l"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))), term: Var("tx"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), rule: Var("tx"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Var("X2~")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2~")), Var("Y"))))))))))), Var("X1r")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))), term: Var("rc"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), rule: Var("rc"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))))), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Ret(Pair(Var("r"), Var("b"))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), term: Pair(Var("r"), Var("b")), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), term: Var("r"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), rule: Var("r"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1l"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Prim(Bool)), term: Var("b"), clas: Ok(Prim(Bool)), rule: Var("b"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), term: Let("let_split_sugar", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: Let("let_split_sugar", Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), Var("nj")), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), Var("j")), clas: Ok(Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), Var("y")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), Var("x")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), Var("rc")), clas: Ok(Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), NmTm(Bin(Name(Leaf), Var("Z")))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Bin(Name(Leaf), Var("Z")))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), Var("Y")), clas: Ok(ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(IdxApp(Force(Var("trie_replrec")), Var("X1r")), Var("X2")), clas: Ok(ForallIdx("Y", NmSet, Equiv(Apart(Var("X1r"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: IdxApp(Force(Var("trie_replrec")), Var("X1r")), clas: Ok(ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1r"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: IdxApp(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Force(Var("trie_replrec")), clas: Ok(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: Force(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("trie_replrec"), clas: Ok(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), rule: Var("trie_replrec"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("X1r"), clas: Ok(NmSet), rule: Var("X1r"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("X2"), clas: Ok(NmSet), rule: Var("X2"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("Y"), clas: Ok(NmSet), rule: Var("Y"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: NmTm(Bin(Name(Leaf), Var("Z"))), clas: Ok(Nm), rule: NmTm(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Bin(Name(Leaf), Var("Z")), clas: Ok(Nm), rule: Bin(Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Synth, term: Var("Z"), clas: Ok(Nm), rule: Var("Z"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), term: Var("rc"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), rule: Var("rc"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Nm(Var("X2"))), term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Prim(Nat)), term: Var("j"), clas: Ok(Prim(Nat)), rule: Var("j"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), dir: Check(Nm(Sing(Bin(Name(Leaf), Var("Z"))))), term: Var("nj"), clas: Ok(Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), rule: Var("nj"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Split(Var("let_split_sugar"), "tx", "b", Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b"))))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Split(Der { ctx: Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "tx", "b", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Let("r", AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), Ret(Pair(Var("r"), Var("b")))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Let("r", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: AnnoC(Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), Lift(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Ident("WS_Trie"), Var("X2")))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: AnnoC(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), term: Let("ref_name_sugar", PrimApp(NameBin(Var("x"), Var("ni"))), Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: Let("ref_name_sugar", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: PrimApp(NameBin(Var("x"), Var("ni"))), clas: Ok(Cons(Lift(Nm(Bin(Var("X2"), Sing(Var("Z"))))), WR(Empty, Empty))), rule: PrimApp(NameBin(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: Var("x"), clas: Ok(Nm(Var("X2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), dir: Synth, term: Var("ni"), clas: Ok(Nm(Sing(Var("Z")))), rule: Var("ni"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), term: Ref(Var("ref_name_sugar"), Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx")))))))), clas: Ok(Cons(Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), WR(Empty, Empty))), rule: Ref(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("ref_name_sugar"), clas: Ok(Nm(Bin(Var("X2"), Sing(Var("Z"))))), rule: Var("ref_name_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), term: Roll(Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), rule: Roll(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), term: Inj2(Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx")))))), clas: Ok(IdxApp(IdxApp(IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2")), Var("Y")))))))))), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), rule: Inj2(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Sum(Prod(Nm(NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), Prim(Nat)), Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))))), term: Inj2(Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))))), clas: Ok(Sum(Prod(Nm(NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] })), Prim(Nat)), Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))))), rule: Inj2(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))))), term: Pack(Var("X1l"), Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx")))), clas: Ok(Exists("X1~", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1~"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X1l"), clas: Ok(NmSet), rule: Var("X1l"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Exists("X2~", NmSet, Equiv(Apart(Var("X1l"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1l")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))), term: Pack(Apart(Var("X1r"), Var("X2")), Pair(Var("lc"), Var("tx"))), clas: Ok(Exists("X2~", NmSet, Equiv(Apart(Var("X1l"), Var("X2~")), NmSet(NmSet { cons: Some(Apart), terms: [Subset(Var("X1")), Subset(Var("X2"))] }), NmSet), Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X1l")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))), Var("X2~")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))))), rule: Pack(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Apart(Var("X1r"), Var("X2")), clas: Ok(NmSet), rule: Apart(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X1r"), clas: Ok(NmSet), rule: Var("X1r"), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Synth, term: Var("X2"), clas: Ok(NmSet), rule: Var("X2"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Var("X1l")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Apart(Var("X1r"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))), term: Pair(Var("lc"), Var("tx")), clas: Ok(Prod(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Var("X1l")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))), Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Apart(Var("X1r"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }))))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Var("X1l")), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))), term: Var("lc"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), rule: Var("lc"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "ref_name_sugar", Nm(Bin(Var("X2"), Sing(Var("Z"))))), dir: Check(Ref(NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] }), IdxApp(IdxApp(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2~", NmSet, Equiv(Apart(Var("X1"), Apart(Var("X1r"), Var("X2"))), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Apart(Var("X1r"), Var("X2"))), Var("Y"))))))))))), Apart(Var("X1r"), Var("X2"))), NmSet(NmSet { cons: None, terms: [Subset(Map(WriteScope, Bin(Var("X2"), MapStar(Lam("x", Nm, Bin(Name(Leaf), Var("x"))), Sing(Var("x")))))), Subset(Var("Y"))] })))), term: Var("tx"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), rule: Var("tx"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Lift(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))))), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), term: Ret(Pair(Var("r"), Var("b"))), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(Empty, Var("Y")))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), term: Pair(Var("r"), Var("b")), clas: Ok(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), rule: Pair(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), term: Var("r"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), rule: Var("r"), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Var(PropTrue(IVar(Var(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Var(IVar(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "X1", NmSet), "X2", NmSet), "Y", NmSet), Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet)), "Z", Nm), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y"))), "x", Nm(Var("X2"))), "y", Prim(Nat)), "i", Prim(Nat)), "ni", Nm(Sing(Var("Z")))), "sugar_if_scrutinee", Prim(Bool)), "j", Prim(Nat)), "nj", Nm(Bin(Sing(Name(Leaf)), Sing(Var("Z"))))), "tc", Exists("X1~", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1~"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1~")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), "X1l", NmSet), "sugar_unpack_multi", Exists("X2", NmSet, Equiv(Apart(Var("X1l"), Var("X2")), Var("X1"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y"))))), "X1r", NmSet), Equiv(Apart(Var("X1l"), Var("X1r")), Var("X1"), NmSet)), "tc", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y")))), "lc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1l")), Var("Y"))), "rc", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1r")), Var("Y"))), "bit", Prim(Bool)), "let_split_sugar", Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), "tx", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1r"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), "b", Prim(Bool)), "r", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2"))))), dir: Check(Prim(Bool)), term: Var("b"), clas: Ok(Prim(Bool)), rule: Var("b"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } }), Bind(ItemDer { doc: None, qual: Val, var: "trie_replace", der: Der { ctx: Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), dir: Synth, term: (), clas: Ok(Type(Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), rule: Fn("trie_replace", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), dir: Check(Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), term: ThunkAnon(Fix("trie_replace", Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))))))), clas: Ok(Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(Ident("RefTrie"), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Ident("Nat"), Cons(Lift(Prod(IdxApp(IdxApp(Ident("RefTrie"), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Ident("WS_Trie"), Var("Z2")))), Ident("Bool"))), WR(App(Ident("WS_Trie"), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: ThunkAnon(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), dir: Check(ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), term: Fix("trie_replace", Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf)))))), clas: Ok(ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: Fix("trie_replace", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), dir: Check(ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), term: Lam("t", Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("t", Der { ctx: Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), dir: Check(Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), term: Lam("x", Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf)))), clas: Ok(Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: Lam("x", Der { ctx: Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), dir: Check(Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), term: Lam("y", App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf))), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), rule: Lam("y", Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: App(App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), Name(Leaf)), clas: Ok(Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), rule: App(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: App(App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), Nat(0)), clas: Ok(Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: App(App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), Var("y")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: App(App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), Var("x")), clas: Ok(Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: App(IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), Var("t")), clas: Ok(Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: App(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: IdxApp(IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), Sing(Name(Leaf))), clas: Ok(Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), rule: IdxApp(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: IdxApp(IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), Var("YZ")), clas: Ok(ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), rule: IdxApp(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: IdxApp(IdxApp(Force(Var("trie_replrec")), Var("Z1")), Var("Z2")), clas: Ok(ForallIdx("Y", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("Y")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))), rule: IdxApp(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: IdxApp(Force(Var("trie_replrec")), Var("Z1")), clas: Ok(ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("Z1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))), rule: IdxApp(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Force(Var("trie_replrec")), clas: Ok(ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(Lam("x", NmSet, Map(WriteScope, Var("x"))), App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), rule: Force(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Var("trie_replrec"), clas: Ok(Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), rule: Var("trie_replrec"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Var("Z1"), clas: Ok(NmSet), rule: Var("Z1"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Var("Z2"), clas: Ok(NmSet), rule: Var("Z2"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Var("YZ"), clas: Ok(NmSet), rule: Var("YZ"), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Sing(Name(Leaf)), clas: Ok(NmSet), rule: Sing(Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Synth, term: Name(Leaf), clas: Ok(Nm), rule: Name(Leaf), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "IdxTm", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Check(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), term: Var("t"), clas: Ok(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), rule: Var("t"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Check(Nm(Var("Z2"))), term: Var("x"), clas: Ok(Nm(Var("Z2"))), rule: Var("x"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Check(Prim(Nat)), term: Var("y"), clas: Ok(Prim(Nat)), rule: Var("y"), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Check(Prim(Nat)), term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(PropTrue(IVar(IVar(IVar(Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), "Z1", NmSet), "Z2", NmSet), "YZ", NmSet), Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet)), "t", IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ"))), "x", Nm(Var("Z2"))), "y", Prim(Nat)), dir: Check(Nm(Sing(Var("Z")))), term: Name(Leaf), clas: Ok(Nm(Sing(Var("Z")))), rule: Name(Leaf), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Module", local_err: false } } })], ctx_out: Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))) } }, Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), dir: Synth, term: Ret(Nat(0)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Var(Def(Def(Def(Def(Def(Def(Def(Def(Def(Def(Empty, "Trie", Type(Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y"))))))))))))), "RefTrie", Type(IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y"))))))), "Zero", NmTm(Name(Leaf))), "Succ", IdxTm(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))))), "Gte", IdxTm(Lam("x", Nm, FlatMapStar(Ident("Succ"), Sing(Var("x")))))), "Nat", IdxTm(App(Ident("Gte"), NmTm(Name(Leaf))))), "Ins", IdxTm(Lam("X", NmSet, Bin(Var("X"), Ident("Nat"))))), "WS_Trie", IdxTm(Lam("X", NmSet, App(WriteScope, App(Ident("Ins"), Var("X")))))), "Out_Dedup", IdxTm(Lam("X", NmSet, Bin(Sing(Name(Sym("r"))), Var("X"))))), "WS_Dedup", IdxTm(Lam("X", NmSet, Apart(Apart(App(Ident("WS_Trie"), Var("X")), Bin(Sing(Name(Sym("dd"))), Var("X"))), App(Ident("Out_Dedup"), Var("X")))))), "nat_hash_bit", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "nat_print2", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))), "print_found_duplicate", Thk(Empty, Cons(Arrow(Prim(Nat), Cons(Lift(Unit), WR(Empty, Empty))), WR(Empty, Empty)))), "children", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Lift(Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X2")), Var("Y")))))), WR(Empty, Var("Y")))), WR(Empty, Empty)))))), "is_leaf_with_nat", Thk(Empty, ForallIdx("X", NmSet, Tt, ForallIdx("Y", NmSet, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X")), Var("Y")), Cons(Arrow(Prim(Nat), Cons(Lift(Prim(Bool)), WR(Empty, Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty)))))), "trie_replrec", Thk(Empty, ForallIdx("X1", NmSet, Tt, ForallIdx("X2", NmSet, Tt, ForallIdx("Y", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), ForallIdx("Z", Nm, Tt, Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("X1")), Var("Y")), Cons(Arrow(Nm(Var("X2")), Cons(Arrow(Prim(Nat), Cons(Arrow(Prim(Nat), Cons(Arrow(Nm(Sing(Var("Z"))), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("X1"), Var("X2"))), Union(Var("Y"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("X2")), Var("Y")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty)))))))), "trie_replace", Thk(Empty, ForallIdx("Z1", NmSet, Tt, ForallIdx("Z2", NmSet, Tt, ForallIdx("YZ", NmSet, Equiv(Apart(Var("Z1"), Var("Z2")), Var("Z"), NmSet), Cons(Arrow(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Var("Z1")), Var("YZ")), Cons(Arrow(Nm(Var("Z2")), Cons(Arrow(Prim(Nat), Cons(Lift(Prod(IdxApp(IdxApp(IdentDef("RefTrie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Ref(Var("Y"), IdxApp(IdxApp(IdentDef("Trie", Rec("trie", IdxFn("X", NmSet, IdxFn("Y", NmSet, Sum(Unit, Sum(Prod(Nm(Var("X")), Prim(Nat)), Exists("X1", NmSet, Tt, Exists("X2", NmSet, Equiv(Apart(Var("X1"), Var("X2")), Var("X"), NmSet), Prod(Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X1")), Var("Y"))), Ref(Var("Y"), IdxApp(IdxApp(Var("trie"), Var("X2")), Var("Y")))))))))))), Var("X")), Var("Y")))))), Apart(Var("Z1"), Var("Z2"))), Union(Var("YZ"), App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")))), Prim(Bool))), WR(App(Lam("X", NmSet, App(WriteScope, App(Lam("X", NmSet, Bin(Var("X"), App(Lam("x", Nm, FlatMapStar(Lam("x", Nm, Sing(Bin(Name(Leaf), Var("x")))), Sing(Var("x")))), NmTm(Name(Leaf))))), Var("X")))), Var("Z2")), Var("YZ")))), WR(Empty, Empty))), WR(Empty, Empty))), WR(Empty, Empty))))))), dir: Synth, term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, traces: [] }