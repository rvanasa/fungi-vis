Bundle { input: "let foo :\n(Thk [0]\n {\n     { @ ! } (({ @ 666 } % { @ 777 }) * ({ @ 1 } % { @ 2 })) ; { @ ! }\n     (({ @ 666 } % { @ 777 }) * ({ @ 1 } % { @ 2 }))\n } F Nat) =\n{\n    ret thunk let bar =\n    {\n        ws (nmfn (# x : Nm . (@ 666) * x))\n        {\n            let (a1, b1) = { memo (name @ 1) { ret 111 } } let (a2, b2) =\n            { memo (name @ 2) { ret 222 } } ret 0\n        }\n    } let baz =\n    {\n        ws (nmfn (# x : Nm . (@ 777) * x))\n        {\n            let (a1, b1) = { memo (name @ 1) { ret 111 } } let (a2, b2) =\n            { memo (name @ 2) { ret 222 } } ret 0\n        }\n    } ret 0\n} ret 0", program: Der { ctx: Empty, dir: Synth, term: Let("foo", AnnoC(Ret(ThunkAnon(Let("bar", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0)))))), Lift(Thk(Empty, Cons(Lift(Ident("Nat")), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))))), Ret(Nat(0))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Let("foo", Der { ctx: Empty, dir: Synth, term: AnnoC(Ret(ThunkAnon(Let("bar", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0)))))), Lift(Thk(Empty, Cons(Lift(Ident("Nat")), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))))), clas: Ok(Cons(Lift(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), WR(Empty, Empty))), rule: AnnoC(Der { ctx: Empty, dir: Check(Cons(Lift(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), WR(Empty, Empty))), term: Ret(ThunkAnon(Let("bar", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0)))))), clas: Ok(Cons(Lift(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), WR(Empty, Empty))), rule: Ret(Der { ctx: Empty, dir: Check(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), term: ThunkAnon(Let("bar", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0))))), clas: Ok(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), rule: ThunkAnon(Der { ctx: Empty, dir: Check(Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), term: Let("bar", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0)))), clas: Ok(Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), rule: Let("bar", Der { ctx: Empty, dir: Synth, term: WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Apart(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))), Union(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))))))), rule: WriteScope(Der { ctx: Empty, dir: Synth, term: NameFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x")))), clas: Ok(NmFn(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))))), rule: NameFn(Der { ctx: Empty, dir: Synth, term: Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), clas: Ok(NmArrow(Nm, Nm)), rule: Lam("x", Nm, Der { ctx: IVar(Empty, "x", Nm), dir: Synth, term: Bin(Name(Num(666)), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(Empty, "x", Nm), dir: Synth, term: Name(Num(666)), clas: Ok(Nm), rule: Name(Num(666)), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(Empty, "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Empty, dir: Synth, term: Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0)))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Apart(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))), Union(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))))))), rule: Let("let_split_sugar", Der { ctx: Empty, dir: Synth, term: Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1))))))), rule: Let("memo_keyword_sugar", Der { ctx: Empty, dir: Synth, term: Thunk(Name(Num(1)), Ret(Nat(111))), clas: Ok(Cons(Lift(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Empty))), rule: Thunk(Der { ctx: Empty, dir: Synth, term: Name(Num(1)), clas: Ok(Nm(Sing(Name(Num(1))))), rule: Name(Num(1)), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Empty, dir: Synth, term: Ret(Nat(111)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Empty, dir: Synth, term: Nat(111), clas: Ok(Prim(Nat)), rule: Nat(111), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Empty, "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: PrimApp(RefThunk(Var("memo_keyword_sugar"))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), WR(Empty, Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1))))))), rule: PrimApp(RefThunk(Der { ctx: Var(Empty, "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: Var("memo_keyword_sugar"), clas: Ok(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), rule: Var("memo_keyword_sugar"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Split(Der { ctx: Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "a1", "b1", Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0)))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Let("let_split_sugar", Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Let("memo_keyword_sugar", Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Thunk(Name(Num(2)), Ret(Nat(222))), clas: Ok(Cons(Lift(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Empty))), rule: Thunk(Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Name(Num(2)), clas: Ok(Nm(Sing(Name(Num(2))))), rule: Name(Num(2)), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Ret(Nat(222)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Nat(222), clas: Ok(Prim(Nat)), rule: Nat(222), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: PrimApp(RefThunk(Var("memo_keyword_sugar"))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), WR(Empty, Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: PrimApp(RefThunk(Der { ctx: Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: Var("memo_keyword_sugar"), clas: Ok(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), rule: Var("memo_keyword_sugar"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Split(Der { ctx: Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "a2", "b2", Der { ctx: Var(Var(Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), "a2", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat))), "b2", Prim(Nat)), dir: Synth, term: Ret(Nat(0)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Empty, "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), "a2", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(666)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat))), "b2", Prim(Nat)), dir: Synth, term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Check(Cons(Lift(Prim(Nat)), WR(NmSet(NmSet { cons: Some(Apart), terms: [Single(App(WriteScope, Name(Bin(Num(777), Num(1))))), Single(App(WriteScope, Name(Bin(Num(777), Num(2)))))] }), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), term: Let("baz", WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), Ret(Nat(0))), clas: Ok(Cons(Lift(Prim(Nat)), WR(NmSet(NmSet { cons: Some(Apart), terms: [Single(App(WriteScope, Name(Bin(Num(777), Num(1))))), Single(App(WriteScope, Name(Bin(Num(777), Num(2)))))] }), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), rule: Let("baz", Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: WriteScope(NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Apart(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))), Union(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))))))), rule: WriteScope(Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: NameFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x")))), clas: Ok(NmFn(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))))), rule: NameFn(Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), clas: Ok(NmArrow(Nm, Nm)), rule: Lam("x", Nm, Der { ctx: IVar(Var(Empty, "bar", Prim(Nat)), "x", Nm), dir: Synth, term: Bin(Name(Num(777)), Var("x")), clas: Ok(Nm), rule: Bin(Der { ctx: IVar(Var(Empty, "bar", Prim(Nat)), "x", Nm), dir: Synth, term: Name(Num(777)), clas: Ok(Nm), rule: Name(Num(777)), vis: DerVis { tmfam: "NmTm", local_err: false } }, Der { ctx: IVar(Var(Empty, "bar", Prim(Nat)), "x", Nm), dir: Synth, term: Var("x"), clas: Ok(Nm), rule: Var("x"), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "NmTm", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0)))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Apart(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))), Union(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))))))), rule: Let("let_split_sugar", Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Let("memo_keyword_sugar", Thunk(Name(Num(1)), Ret(Nat(111))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1))))))), rule: Let("memo_keyword_sugar", Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Thunk(Name(Num(1)), Ret(Nat(111))), clas: Ok(Cons(Lift(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Empty))), rule: Thunk(Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Name(Num(1)), clas: Ok(Nm(Sing(Name(Num(1))))), rule: Name(Num(1)), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Ret(Nat(111)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Empty, "bar", Prim(Nat)), dir: Synth, term: Nat(111), clas: Ok(Prim(Nat)), rule: Nat(111), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: PrimApp(RefThunk(Var("memo_keyword_sugar"))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), WR(Empty, Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1))))))), rule: PrimApp(RefThunk(Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: Var("memo_keyword_sugar"), clas: Ok(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), rule: Var("memo_keyword_sugar"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Split(Var("let_split_sugar"), "a1", "b1", Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Split(Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "a1", "b1", Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Let("let_split_sugar", Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0)))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Let("let_split_sugar", Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Let("memo_keyword_sugar", Thunk(Name(Num(2)), Ret(Nat(222))), PrimApp(RefThunk(Var("memo_keyword_sugar")))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: Let("memo_keyword_sugar", Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Thunk(Name(Num(2)), Ret(Nat(222))), clas: Ok(Cons(Lift(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), WR(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Empty))), rule: Thunk(Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Name(Num(2)), clas: Ok(Nm(Sing(Name(Num(2))))), rule: Name(Num(2)), vis: DerVis { tmfam: "Val", local_err: false } }, Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Ret(Nat(222)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), dir: Synth, term: Nat(222), clas: Ok(Prim(Nat)), rule: Nat(222), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: PrimApp(RefThunk(Var("memo_keyword_sugar"))), clas: Ok(Cons(Lift(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), WR(Empty, Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2))))))), rule: PrimApp(RefThunk(Der { ctx: Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "memo_keyword_sugar", Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), dir: Synth, term: Var("memo_keyword_sugar"), clas: Ok(Thk(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Cons(Lift(Prim(Nat)), WR(Empty, Empty)))), rule: Var("memo_keyword_sugar"), vis: DerVis { tmfam: "Val", local_err: false } })), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Split(Var("let_split_sugar"), "a2", "b2", Ret(Nat(0))), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Split(Der { ctx: Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), dir: Synth, term: Var("let_split_sugar"), clas: Ok(Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), rule: Var("let_split_sugar"), vis: DerVis { tmfam: "Val", local_err: false } }, "a2", "b2", Der { ctx: Var(Var(Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), "a2", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat))), "b2", Prim(Nat)), dir: Synth, term: Ret(Nat(0)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Var(Var(Var(Var(Var(Var(Empty, "bar", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat)), Prim(Nat))), "a1", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(1)))), Prim(Nat))), "b1", Prim(Nat)), "let_split_sugar", Prod(Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat)), Prim(Nat))), "a2", Ref(Map(Lam("_a", Nm, App(WriteScope, App(Lam("x", Nm, Bin(Name(Num(777)), Var("x"))), Var("_a")))), Sing(Name(Num(2)))), Prim(Nat))), "b2", Prim(Nat)), dir: Synth, term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "baz", Prim(Nat)), dir: Check(Cons(Lift(Prim(Nat)), WR(Empty, App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), term: Ret(Nat(0)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))), rule: Ret(Der { ctx: Var(Var(Empty, "bar", Prim(Nat)), "baz", Prim(Nat)), dir: Check(Prim(Nat)), term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, Lift(Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2))))))))))), vis: DerVis { tmfam: "Exp", local_err: false } }, Der { ctx: Var(Empty, "foo", Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), dir: Synth, term: Ret(Nat(0)), clas: Ok(Cons(Lift(Prim(Nat)), WR(Empty, Empty))), rule: Ret(Der { ctx: Var(Empty, "foo", Thk(Empty, Cons(Lift(Prim(Nat)), WR(App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))), App(WriteScope, Bin(Apart(Sing(Name(Num(666))), Sing(Name(Num(777)))), Apart(Sing(Name(Num(1))), Sing(Name(Num(2)))))))))), dir: Synth, term: Nat(0), clas: Ok(Prim(Nat)), rule: Nat(0), vis: DerVis { tmfam: "Val", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }), vis: DerVis { tmfam: "Exp", local_err: false } }, traces: [] }